<suki:SukiWindow  xmlns="https://github.com/avaloniaui"
                  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                  xmlns:models="clr-namespace:SukiUI.Models;assembly=SukiUI"
                  xmlns:suki="clr-namespace:SukiUI.Controls;assembly=SukiUI"
                  xmlns:avalonia="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia"
                  xmlns:vm="clr-namespace:NetX.AppCore.ViewModels"
                  xmlns:converters="clr-namespace:NetX.AppCore.Converters"
                  x:DataType="vm:MainViewModel"
                  mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
                  x:Class="NetX.AppCore.Views.MainWindow"
                  Title="MainView"
                  
                  BackgroundAnimationEnabled="{Binding AnimationsEnabled}"
                  CanMinimize="{Binding !WindowLocked}"
                  CanMove="{Binding !WindowLocked}"
                  CanResize="{Binding !WindowLocked}"
                  IsMenuVisible="True"
                  IsTitleBarVisible="{Binding TitleBarVisible, Mode=TwoWay}"
                  >
  
  <!-- 菜单栏自定义菜单 -->
  <suki:SukiWindow.MenuItems>

    <MenuItem Header="系统设置">
      <MenuItem.Icon>
        <avalonia:MaterialIcon Kind="Tools" />
      </MenuItem.Icon>
      <MenuItem Command="{Binding ToggleWindowLockCommand}"
                Header="窗口锁定"
                ToolTip.Tip="Toggles minimizing and resizing.">
        <MenuItem.Icon>
          <avalonia:MaterialIcon Kind="{Binding WindowLocked, Converter={x:Static converters:BoolToIconConverters.WindowLock}}" />
        </MenuItem.Icon>
      </MenuItem>
      <MenuItem Header="全屏"
                Command="{Binding FullScreenCommand}">
        <MenuItem.Icon>
          <avalonia:MaterialIcon Kind="{Binding FullScreenVisible, Converter={x:Static converters:BoolToIconConverters.FullScreen}}" />
        </MenuItem.Icon>
      </MenuItem>
      
      <MenuItem Command="{Binding ToggleAnimationsCommand}" Header="Animations"
                IsVisible="False">
        <MenuItem.Icon>
          <avalonia:MaterialIcon Kind="{Binding AnimationsEnabled, Converter={x:Static converters:BoolToIconConverters.Animation}}" />
        </MenuItem.Icon>
      </MenuItem>
      <MenuItem Command="{Binding ToggleTitleBarCommand}"
                Header="Title Bar"
                ToolTip.Tip="Toggles the title bar."
                IsVisible="False">
        <MenuItem.Icon>
          <avalonia:MaterialIcon Kind="{Binding TitleBarVisible, Converter={x:Static converters:BoolToIconConverters.Visibility}}" />
        </MenuItem.Icon>
      </MenuItem>
    </MenuItem>

    <MenuItem Header="主题">
      <MenuItem.Icon>
        <avalonia:MaterialIcon Kind="Theme" />
      </MenuItem.Icon>
      <MenuItem Command="{Binding ToggleBaseThemeCommand}" Header="{Binding BaseTheme}">
        <MenuItem.Icon>
          <avalonia:MaterialIcon Kind="ThemeLightDark" />
        </MenuItem.Icon>
      </MenuItem>
      <MenuItem Click="MenuItem_OnClick"
                Header="主题色"
                ItemsSource="{Binding Themes}">
        <MenuItem.Icon>
          <avalonia:MaterialIcon Kind="Color" />
        </MenuItem.Icon>
        <MenuItem.DataTemplates>
          <DataTemplate DataType="{x:Type models:SukiColorTheme}">
            <StackPanel Orientation="Horizontal">
              <RadioButton IsChecked="{Binding IsCurrentTheme}" Margin="0,0,10,0" IsEnabled="False"/>
              <TextBlock Foreground="{Binding PrimaryBrush}" Text="{Binding DisplayName}" />
            </StackPanel>
          </DataTemplate>
        </MenuItem.DataTemplates>
      </MenuItem>
      <MenuItem Header="-" />
      <MenuItem Command="{Binding CreateCustomThemeCommand}" Header="自定义主题色" >
        <MenuItem.Icon>
          <avalonia:MaterialIcon Kind="CustomerService" />
        </MenuItem.Icon>
      </MenuItem>
    </MenuItem>

    <MenuItem Header="-" />
    
    <MenuItem Header="帮助">
      <MenuItem.Icon>
        <avalonia:MaterialIcon Kind="Help" />
      </MenuItem.Icon>
      <MenuItem Header="关于" Command="">
        <MenuItem.Icon>
          <avalonia:MaterialIcon Kind="Information" />
        </MenuItem.Icon>
      </MenuItem>
      <MenuItem Header="GitHub" Command="">
        <MenuItem.Icon>
          <avalonia:MaterialIcon Kind="Github" />
        </MenuItem.Icon>
      </MenuItem>
    </MenuItem>
    
  </suki:SukiWindow.MenuItems>

  <!-- 侧边栏 -->
  <suki:SukiSideMenu ItemsSource="{Binding Menus}">

    <!-- 系统菜单 -->
    <suki:SukiSideMenu.ItemTemplate>
      <DataTemplate>
        <suki:SukiSideMenuItem Header="{Binding DisplayName}">
          <suki:SukiSideMenuItem.Icon>
            <avalonia:MaterialIcon Kind="{Binding Icon}" />
          </suki:SukiSideMenuItem.Icon>
        </suki:SukiSideMenuItem>
      </DataTemplate>
    </suki:SukiSideMenu.ItemTemplate>

    <!-- 用户头像 -->
    <suki:SukiSideMenu.HeaderContent>
      <StackPanel HorizontalAlignment="Center">
        <Border 
          Margin="10,0,10,0"
          Width="80" 
          Height="80" 
          CornerRadius="40" 
          ClipToBounds="True" 
          Background="{DynamicResource SukiPrimaryColor}">
            <Image Source="{Binding Avatar}" Tapped="Avatar_Tapped" />
        </Border>
      </StackPanel>
    </suki:SukiSideMenu.HeaderContent>

    <!-- 底部菜单 -->
    <suki:SukiSideMenu.FooterContent>
      <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
        <StackPanel.Styles>
          <Style Selector="avalonia|MaterialIcon">
            <Setter Property="Width" Value="25" />
            <Setter Property="Height" Value="25" />
          </Style>
        </StackPanel.Styles>
        <Button Classes="Basic">
          <avalonia:MaterialIcon Kind="Github" />
        </Button>
        <Button Classes="Basic">
          <avalonia:MaterialIcon Kind="Package" />
        </Button>
        <Button Classes="Basic">
          <avalonia:MaterialIcon Kind="Share" />
        </Button>
      </StackPanel>
    </suki:SukiSideMenu.FooterContent>
    
  </suki:SukiSideMenu>
  
</suki:SukiWindow >
